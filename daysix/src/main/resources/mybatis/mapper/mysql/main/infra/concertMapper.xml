<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.seon.infra.concert.ConcertDao">
<!-- namespace :  mapper와 연결될 dao -->
<!-- xml에서 주석 단축키 : Ctrl + Shift + C -->

	<resultMap type="com.seon.infra.concert.ConcertDto" id="resultMapObj"></resultMap>
	
	<select id="selectList" resultMap="resultMapObj">
		SELECT aa.* FROM (
			SELECT
				a.concertSeq
				,a.concertName
				,a.concertPlayTime
				,a.concertDate
				,a.concertSinger
				,a.concertAge
				,a.concertGenre
				,a.concertDesc
				,a.concertDateTimeReg
				,a.concertDateTimeEdit
				,a.concertUseNy
				,a.concertDelNy
			FROM concert AS a
			ORDER BY
				a.concertSeq DESC
		) aa
		limit #{rowNumToShow} offset #{startRnumForMysql}
	</select>
	
	<insert id="insert">
		INSERT INTO concert (
			concertName
			,concertPlayTime
			,concertDate
			,concertSinger
			,concertAge
			,concertGenre
			,concertDesc
			,concertDateTimeReg
			,concertDateTimeEdit
			,concertUseNy
			,concertDelNy
		)
		VALUE (
			#{concertName}
			,#{concertPlayTime}
			,#{concertDate}
			,#{concertSinger}
			,#{concertAge}
			,#{concertGenre}
			,#{concertDesc}
			,now()
			,now()
			,1
			,0
		)
		<selectKey resultType="String" keyProperty="concertSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			a.concertSeq
			,a.concertName
			,a.concertPlayTime
			,a.concertDate
			,a.concertSinger
			,a.concertAge
			,a.concertGenre
			,a.concertDesc
			,a.concertDateTimeReg
			,a.concertDateTimeEdit
			,a.concertUseNy
			,a.concertDelNy
		FROM concert AS a
		WHERE 1 = 1
			AND a.concertSeq = #{concertSeq}
	</select>
	
	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
			FROM concert AS a
	</select>
	
	<update id="update">
		UPDATE concert
			SET
				concertName = #{concertName}
				,concertPlayTime = #{concertPlayTime}
				,concertDate = #{concertDate}
				,concertSinger = #{concertSinger}
				,concertAge = #{concertAge}
				,concertGenre = #{concertGenre}
				,concertDesc = #{concertDesc}
				,concertDateTimeReg = now()
				,concertDateTimeEdit = now()
				,concertUseNy = #{concertUseNy}
			WHERE 1 = 1
				AND concertSeq = #{concertSeq}
	</update>
	
</mapper>